// BusinessReviews.swift
import SwiftUI

// Define ReviewCard struct
struct ReviewCard: View {
    let review: Review

    var body: some View {
        VStack(alignment: .leading, spacing: 8) {
            Text("User: \(review.user)")
            Text("Rating: \(review.rating)")
            Text("Comment: \(review.comment)")
        }
        .padding()
        .background(Color.teal.opacity(0.2))
        .cornerRadius(8)
    }
}

// Define Business struct
struct Business {
    let name: String
    let type: String
    let location: String
    let contact: String
    let reviews: [Review]
}

// Define Review struct
struct Review: Identifiable {
    let id = UUID()
    let user: String
    let rating: Int
    let comment: String
}

struct BusinessReviews: View {
    // Sample business data for preview
    let business: Business = Business(name: "Paws & Claws Pet Store", type: "Pet Store", location: "123 Main St", contact: "info@pawsnclaws.com", reviews: [
        Review(user: "Jane Doe", rating: 5, comment: "Great service!"),
        Review(user: "John Smith", rating: 4, comment: "Nice selection of products."),
        Review(user: "Alice Johnson", rating: 3, comment: "Could improve customer service.")
    ])
    
    @State private var userReview: String = ""
    @State private var userRating: Int = 5 // Default rating
    
    var body: some View {
        ScrollView {
            VStack(alignment: .leading, spacing: 16) {
                // Business information section
                Section(header: Text("Business Information")
                            .font(.title2)
                            .foregroundColor(.teal)
                            .padding(.bottom, 5)
                ) {
                    Text("Name: \(business.name)")
                    Text("Type: \(business.type)")
                    Text("Location: \(business.location)")
                    Text("Contact: \(business.contact)")
                }
                
                // User's review section
                Section(header: Text("Your Review")
                            .font(.title2)
                            .foregroundColor(.teal)
                            .padding(.bottom, 5)
                ) {
                    // Rating picker
                    Picker("Rating", selection: $userRating) {
                        ForEach(1..<6) { rating in
                            Text("\(rating)")
                        }
                    }
                    .pickerStyle(SegmentedPickerStyle())
                    
                    // Review text field
                    TextField("Leave a review", text: $userReview)
                        .padding()
                        .background(Color.gray.opacity(0.2))
                        .cornerRadius(8)
                }
                
                // Other users' reviews section
                Section(header: Text("Other Reviews")
                            .font(.title2)
                            .foregroundColor(.teal)
                            .padding(.bottom, 5)
                ) {
                    ForEach(business.reviews) { review in
                        ReviewCard(review: review)
                    }
                }
                
                // Button to submit review
                Button(action: {
                    // Submit review action (to be implemented)
                    print("Submitted review: \(userRating) stars - \(userReview)")
                }) {
                    Text("Submit Review")
                        .foregroundColor(.white)
                        .padding()
                        .frame(maxWidth: .infinity)
                        .background(Color.teal)
                        .cornerRadius(8)
                        .fontWeight(.heavy)
                }
            }
            .padding()
            .navigationTitle("Business Reviews")
        }
    }
}

// Preview for BusinessReviews
struct BusinessReviews_Previews: PreviewProvider {
    static var previews: some View {
        BusinessReviews()
    }
}
